/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include "Sprites.h"
/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */

/// Sounds
#define AUDIOLEN_BOOP_1 13222
static const int16_t boop_1[] = {
    18770,17990,26436,0,16727,17750,28006,8308,16,0,1,1,-17536,0,30464,1,2,16,24932,24948,26400,0,105,3,-881,1095,9214,15740,16103,15335,15363,15397,15367,15337,15307,15277,15247,15217,15187,15158,15128,15100,15070,15040,15010,14982,14952,14922,14894,14864,14836,14806,14776,14748,14721,14691,14663,14633,14605,14577,14549,14519,14491,14463,14435,14407,14379,14349,14321,14294,14266,14238,14210,14184,14156,14128,14100,14072,14044,14018,
    13990,13962,13936,13908,13877,13761,13777,14619,13150,5395,-1707,-2510,-1697,-1715,-1785,-1783,-1781,-1777,-1773,-1771,-1767,-1763,-1759,-1757,-1753,-1749,-1745,-1743,-1739,-1735,-1733,-1729,-1725,-1723,-1719,-1715,-1713,-1709,-1705,-1703,-1699,-1695,-1693,-1689,-1685,-1684,-1680,-1676,-1674,-1670,-1666,-1664,-1660,-1656,-1654,-1650,-1648,-1644,-1640,-1638,-1634,-1632,-1628,-1624,-1622,-1618,-1616,-1612,-1608,-1606,-1602,-1600,-1596,-1594,-1590,-1588,-1584,-1580,-1578,-1574,
    -1572,-1568,-1566,-1562,-1560,-1556,-1554,-1550,-1548,-1544,-1542,-1538,-1536,-1532,-1530,-1526,-1524,-1520,-1518,-1514,-1512,-1508,-1506,-1502,-1500,-1496,-1494,-1490,-1488,-1484,-1482,-1480,-1476,-1474,-1470,-1468,-1464,-1462,-1458,-1456,-1454,-1450,-1448,-1444,-1442,-1440,-1436,-1434,-1430,-1428,-1424,-1422,-1420,-1416,-1414,-1412,-1408,-1406,-1402,-1400,-1398,-1394,-1392,-1390,-1386,-1384,-1380,-1378,-1376,-1372,-1370,-1368,-1364,-1362,-1360,-1356,-1354,-1352,-1348,-1346,
    -1344,-1340,-1338,-1336,-1334,-1330,-1328,-1326,-1322,-1320,-1318,-1314,-1312,-1310,-1308,-1304,-1302,-1300,-1298,-1294,-1292,-1290,-1286,-1284,-1282,-1280,-1276,-1274,-1272,-1270,-1266,-1264,-1263,-1261,-1201,-1123,-1801,-1646,4509,12835,15169,14262,14086,14164,14146,14118,14090,14062,14034,14008,13980,13952,13926,13898,13871,13845,13817,13791,13763,13737,13709,13683,13657,13629,13603,13575,13549,13523,13497,13470,13444,13418,13392,13366,13340,13314,13288,13262,13236,13210,
    13184,13158,13132,13106,13080,13056,13031,13005,12979,12955,12929,12903,12879,12853,12827,12803,12779,12707,12588,13170,13254,7589,-971,-3828,-2978,-2761,-2867,-2875,-2869,-2865,-2859,-2853,-2847,-2841,-2837,-2831,-2825,-2819,-2813,-2809,-2803,-2797,-2791,-2787,-2781,-2775,-2771,-2765,-2759,-2753,-2749,-2743,-2737,-2733,-2727,-2721,-2717,-2711,-2705,-2701,-2695,-2689,-2685,-2679,-2675,-2669,-2663,-2659,-2653,-2649,-2643,-2637,-2633,-2627,-2623,-2617,-2613,-2607,-2601,-2597,
    -2591,-2587,-2581,-2577,-2571,-2567,-2561,-2557,-2551,-2547,-2541,-2537,-2531,-2527,-2522,-2518,-2512,-2508,-2502,-2498,-2494,-2488,-2484,-2478,-2474,-2468,-2464,-2460,-2454,-2450,-2444,-2440,-2436,-2430,-2426,-2420,-2416,-2412,-2406,-2402,-2398,-2392,-2388,-2384,-2378,-2374,-2370,-2364,-2360,-2356,-2350,-2346,-2342,-2336,-2332,-2328,-2324,-2318,-2314,-2310,-2306,-2300,-2296,-2292,-2288,-2282,-2278,-2274,-2270,-2264,-2260,-2256,-2252,-2248,-2242,-2238,-2234,-2230,-2226,-2220,
    -2216,-2212,-2208,-2204,-2200,-2194,-2190,-2186,-2182,-2178,-2174,-2170,-2166,-2160,-2156,-2152,-2148,-2144,-2140,-2136,-2132,-2128,-2124,-2118,-2114,-2110,-2106,-2103,-2099,-2095,-2091,-2087,-2083,-2079,-2075,-2071,-2067,-2063,-2059,-2055,-2051,-2047,-2043,-2039,-2035,-2031,-2027,-2023,-2019,-2015,-2011,-2001,-1903,-1971,-2849,-1141,6797,13609,14174,13374,13388,13430,13406,13378,13352,13326,13300,13274,13248,13222,13196,13170,13146,13120,13094,13068,13043,13017,12993,12967,
    12941,12917,12891,12865,12841,12815,12791,12765,12741,12715,12691,12665,12641,12616,12592,12568,12542,12518,12494,12470,12446,12420,12396,12372,12348,12324,12300,12276,12252,12228,12205,12181,12157,12133,12109,12085,12057,11943,11971,12823,11271,3449,-3563,-4287,-3483,-3505,-3571,-3565,-3557,-3551,-3543,-3537,-3529,-3523,-3515,-3509,-3503,-3495,-3489,-3481,-3475,-3469,-3461,-3455,-3447,-3441,-3435,-3427,-3421,-3415,-3407,-3401,-3395,-3387,-3381,-3375,-3368,-3362,-3356,-3348,
    -3342,-3336,-3330,-3322,-3316,-3310,-3304,-3296,-3290,-3284,-3278,-3272,-3264,-3258,-3252,-3246,-3240,-3232,-3226,-3220,-3214,-3208,-3202,-3196,-3188,-3182,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3126,-3120,-3114,-3108,-3102,-3096,-3090,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3024,-3018,-3012,-3006,-3000,-2994,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2948,-2943,-2937,-2933,-2927,-2921,-2915,-2909,-2903,-2897,-2893,-2887,-2881,-2875,-2869,-2863,
    -2859,-2853,-2847,-2841,-2837,-2831,-2825,-2819,-2813,-2809,-2803,-2797,-2791,-2787,-2781,-2775,-2771,-2765,-2759,-2753,-2749,-2743,-2737,-2733,-2727,-2721,-2717,-2711,-2705,-2701,-2695,-2689,-2685,-2679,-2675,-2669,-2663,-2659,-2653,-2649,-2643,-2637,-2633,-2627,-2623,-2617,-2613,-2607,-2601,-2597,-2591,-2587,-2581,-2577,-2571,-2567,-2561,-2557,-2551,-2547,-2541,-2537,-2531,-2527,-2522,-2518,-2512,-2508,-2502,-2498,-2494,-2488,-2480,-2392,-2420,-3234,-1943,5329,12133,12943,
    12143,12133,12181,12159,12135,12111,12087,12065,12041,12017,11993,11971,11947,11923,11899,11877,11853,11831,11807,11784,11762,11738,11716,11692,11670,11648,11624,11602,11578,11556,11534,11510,11488,11466,11444,11422,11398,11376,11355,11333,11311,11289,11267,11245,11223,11201,11179,11157,11135,11113,11091,11069,11047,11027,11005,10983,10961,10940,10920,10894,10784,10820,11634,10080,2591,-3978,-4599,-3844,-3868,-3928,-3922,-3914,-3906,-3898,-3890,-3884,-3876,-3868,-3860,-3852,
    -3846,-3838,-3830,-3822,-3816,-3808,-3800,-3792,-3787,-3779,-3771,-3765,-3757,-3749,-3743,-3735,-3727,-3721,-3713,-3705,-3699,-3691,-3685,-3677,-3669,-3663,-3655,-3649,-3641,-3633,-3627,-3619,-3613,-3605,-3599,-3591,-3585,-3577,-3571,-3563,-3557,-3549,-3543,-3535,-3529,-3521,-3515,-3507,-3501,-3495,-3487,-3481,-3473,-3467,-3461,-3453,-3447,-3439,-3433,-3427,-3419,-3413,-3407,-3399,-3393,-3387,-3379,-3373,-3368,-3360,-3354,-3348,-3342,-3334,-3328,-3322,-3316,-3308,-3302,-3296,
    -3290,-3282,-3276,-3270,-3264,-3258,-3250,-3244,-3238,-3232,-3226,-3220,-3212,-3206,-3200,-3194,-3188,-3182,-3176,-3170,-3162,-3156,-3150,-3144,-3138,-3132,-3126,-3120,-3114,-3108,-3102,-3096,-3090,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3024,-3018,-3012,-3006,-3000,-2994,-2988,-2982,-2976,-2970,-2964,-2960,-2954,-2948,-2943,-2937,-2931,-2925,-2919,-2915,-2909,-2903,-2897,-2891,-2885,-2879,-2875,-2869,-2863,-2857,-2851,-2847,-2841,-2835,-2829,-2825,-2819,
    -2813,-2807,-2803,-2797,-2791,-2785,-2781,-2775,-2769,-2763,-2759,-2753,-2747,-2743,-2737,-2731,-2727,-2721,-2715,-2711,-2695,-2589,-2737,-3559,-1221,6737,12468,12536,11877,11931,11959,11935,11913,11889,11865,11843,11819,11797,11774,11752,11728,11706,11682,11660,11636,11614,11592,11568,11546,11524,11500,11478,11456,11434,11410,11388,11367,11345,11323,11301,11279,11257,11235,11213,11191,11169,11147,11125,11103,11081,11059,11037,11017,10995,10973,10951,10932,10910,10888,10868,
    10846,10824,10804,10782,10762,10740,10720,10686,10562,10718,11514,8970,913,-4638,-4619,-4006,-4080,-4120,-4112,-4104,-4096,-4088,-4080,-4072,-4064,-4056,-4048,-4040,-4032,-4024,-4016,-4010,-4002,-3994,-3986,-3978,-3970,-3962,-3954,-3946,-3938,-3932,-3924,-3916,-3908,-3900,-3892,-3886,-3878,-3870,-3862,-3854,-3848,-3840,-3832,-3824,-3818,-3810,-3802,-3794,-3789,-3781,-3773,-3767,-3759,-3751,-3745,-3737,-3729,-3723,-3715,-3707,-3701,-3693,-3687,-3679,-3671,-3665,-3657,-3651,
    -3643,-3635,-3629,-3621,-3615,-3607,-3601,-3593,-3587,-3579,-3573,-3565,-3559,-3551,-3545,-3537,-3531,-3523,-3517,-3509,-3503,-3497,-3489,-3483,-3475,-3469,-3463,-3455,-3449,-3441,-3435,-3429,-3421,-3415,-3409,-3401,-3395,-3389,-3381,-3375,-3369,-3362,-3356,-3350,-3344,-3336,-3330,-3324,-3316,-3310,-3304,-3298,-3292,-3284,-3278,-3272,-3266,-3258,-3252,-3246,-3240,-3234,-3228,-3220,-3214,-3208,-3202,-3196,-3190,-3184,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3128,-3122,
    -3116,-3110,-3104,-3098,-3092,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3032,-3026,-3020,-3014,-3008,-3002,-2996,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2950,-2945,-2939,-2933,-2927,-2921,-2915,-2909,-2905,-2899,-2893,-2887,-2881,-2875,-2871,-2865,-2859,-2853,-2847,-2843,-2837,-2831,-2825,-2821,-2815,-2795,-2683,-2893,-3677,-857,7288,12528,12352,11766,11835,11855,11831,11809,11786,11764,11740,11718,11694,11672,11648,11626,11604,11580,11558,11536,11512,11490,
    11468,11446,11422,11400,11378,11357,11335,11313,11291,11269,11245,11223,11201,11181,11159,11137,11115,11093,11071,11049,11027,11007,10985,10963,10942,10922,10900,10878,10858,10836,10814,10794,10772,10752,10730,10710,10688,10668,10646,10626,10604,10584,10550,10423,10616,11386,8553,391,-4864,-4702,-4132,-4215,-4251,-4243,-4233,-4225,-4217,-4210,-4202,-4194,-4186,-4178,-4168,-4160,-4152,-4144,-4136,-4128,-4120,-4112,-4104,-4096,-4088,-4080,-4072,-4064,-4056,-4048,-4040,-4032,
    -4024,-4016,-4008,-4000,-3992,-3986,-3978,-3970,-3962,-3954,-3946,-3938,-3930,-3924,-3916,-3908,-3900,-3892,-3884,-3878,-3870,-3862,-3854,-3848,-3840,-3832,-3824,-3816,-3810,-3802,-3794,-3789,-3781,-3773,-3765,-3759,-3751,-3743,-3737,-3729,-3721,-3715,-3707,-3701,-3693,-3685,-3679,-3671,-3665,-3657,-3649,-3643,-3635,-3629,-3621,-3615,-3607,-3601,-3593,-3585,-3579,-3571,-3565,-3557,-3551,-3545,-3537,-3531,-3523,-3517,-3509,-3503,-3495,-3489,-3483,-3475,-3469,-3461,-3455,-3449,
    -3441,-3435,-3427,-3421,-3415,-3407,-3401,-3395,-3387,-3381,-3375,-3369,-3362,-3356,-3350,-3342,-3336,-3330,-3324,-3316,-3310,-3304,-3298,-3290,-3284,-3278,-3272,-3266,-3258,-3252,-3246,-3240,-3234,-3226,-3220,-3214,-3208,-3202,-3196,-3190,-3182,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3128,-3122,-3116,-3108,-3102,-3096,-3090,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3024,-3018,-3014,-3008,-3002,-2996,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2948,
    -2943,-2939,-2933,-2927,-2921,-2915,-2909,-2903,-2899,-2893,-2887,-2841,-2759,-3272,-3316,1460,8525,10800,10070,9884,9958,9948,9928,9910,9890,9870,9852,9832,9812,9794,9774,9756,9736,9718,9698,9681,9661,9643,9623,9605,9585,9567,9549,9529,9511,9493,9473,9455,9437,9419,9399,9381,9363,9345,9327,9307,9289,9271,9254,9236,9218,9200,9182,9164,9146,9128,9110,9092,9074,9058,9040,9022,9004,8986,8968,8952,8934,8916,8898,8882,
    8864,8846,8803,8693,9074,9427,5435,-1839,-4910,-4299,-4020,-4108,-4118,-4110,-4102,-4094,-4086,-4078,-4070,-4062,-4054,-4046,-4038,-4030,-4022,-4014,-4006,-4000,-3992,-3984,-3976,-3968,-3960,-3952,-3944,-3936,-3930,-3922,-3914,-3906,-3898,-3890,-3884,-3876,-3868,-3860,-3852,-3846,-3838,-3830,-3822,-3816,-3808,-3800,-3794,-3787,-3779,-3771,-3765,-3757,-3749,-3743,-3735,-3727,-3721,-3713,-3705,-3699,-3691,-3685,-3677,-3669,-3663,-3655,-3649,-3641,-3633,-3627,-3619,-3613,
    -3605,-3599,-3591,-3585,-3577,-3571,-3563,-3557,-3549,-3543,-3535,-3529,-3521,-3515,-3509,-3501,-3495,-3487,-3481,-3473,-3467,-3461,-3453,-3447,-3439,-3433,-3427,-3419,-3413,-3407,-3399,-3393,-3387,-3379,-3373,-3368,-3362,-3354,-3348,-3342,-3334,-3328,-3322,-3316,-3308,-3302,-3296,-3290,-3282,-3276,-3270,-3264,-3258,-3250,-3244,-3238,-3232,-3226,-3220,-3212,-3206,-3200,-3194,-3188,-3182,-3176,-3170,-3162,-3156,-3150,-3144,-3138,-3132,-3126,-3120,-3114,-3108,-3102,-3096,-3090,
    -3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3024,-3018,-3012,-3006,-3000,-2994,-2988,-2982,-2976,-2970,-2964,-2960,-2954,-2948,-2943,-2937,-2931,-2925,-2919,-2915,-2909,-2903,-2897,-2891,-2885,-2881,-2875,-2869,-2863,-2857,-2851,-2847,-2841,-2835,-2829,-2825,-2819,-2813,-2807,-2803,-2797,-2791,-2785,-2781,-2775,-2763,-2673,-2763,-3493,-1767,5028,10375,10628,10008,10040,10072,10052,10032,10012,9994,9974,9954,9934,9916,9896,9876,9856,9838,9818,9800,
    9780,9760,9742,9722,9704,9685,9667,9647,9629,9609,9591,9573,9553,9535,9517,9497,9479,9461,9441,9423,9405,9387,9369,9349,9331,9313,9295,9277,9260,9242,9224,9206,9188,9170,9152,9134,9116,9098,9080,9062,9044,9026,9010,8992,8974,8956,8936,8846,8850,9545,8471,2158,-3878,-4662,-3968,-3966,-4022,-4016,-4008,-4002,-3994,-3986,-3978,-3970,-3962,-3954,-3946,-3938,-3932,-3924,-3916,-3908,-3900,-3892,-3886,-3878,-3870,-3862,-3854,-3848,
    -3840,-3832,-3824,-3818,-3810,-3802,-3794,-3789,-3781,-3773,-3767,-3759,-3751,-3745,-3737,-3729,-3723,-3715,-3707,-3701,-3693,-3687,-3679,-3671,-3665,-3657,-3651,-3643,-3635,-3629,-3621,-3615,-3607,-3601,-3593,-3587,-3579,-3573,-3565,-3559,-3551,-3545,-3537,-3531,-3523,-3517,-3509,-3503,-3497,-3489,-3483,-3475,-3469,-3461,-3455,-3449,-3441,-3435,-3429,-3421,-3415,-3409,-3401,-3395,-3389,-3381,-3375,-3369,-3362,-3356,-3350,-3344,-3336,-3330,-3324,-3316,-3310,-3304,-3298,-3292,
    -3284,-3278,-3272,-3266,-3258,-3252,-3246,-3240,-3234,-3228,-3220,-3214,-3208,-3202,-3196,-3190,-3184,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3128,-3122,-3116,-3110,-3104,-3098,-3092,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3032,-3026,-3020,-3014,-3008,-3002,-2996,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2948,-2945,-2939,-2933,-2927,-2921,-2915,-2909,-2905,-2899,-2893,-2887,-2881,-2875,-2871,-2865,-2859,-2853,-2847,-2843,-2837,-2831,-2825,-2821,-2815,
    -2809,-2803,-2799,-2793,-2787,-2781,-2777,-2771,-2765,-2759,-2755,-2749,-2743,-2739,-2733,-2727,-2723,-2717,-2711,-2707,-2701,-2695,-2691,-2685,-2679,-2675,-2663,-2573,-2663,-3393,-1668,5127,10473,10726,10106,10137,10169,10149,10129,10109,10090,10070,10050,10032,10012,9992,9972,9952,9934,9914,9894,9876,9856,9836,9818,9798,9778,9760,9740,9722,9702,9685,9665,9647,9627,9609,9589,9571,9553,9533,9515,9497,9477,9459,9441,9423,9403,9385,9367,9349,
    9331,9313,9293,9275,9258,9240,9222,9204,9186,9168,9150,9132,9114,9096,9078,9062,9044,9026,9008,8990,8914,8864,9489,8978,3292,-3304,-4710,-3970,-3902,-3972,-3970,-3962,-3954,-3946,-3938,-3932,-3924,-3916,-3908,-3900,-3892,-3886,-3878,-3870,-3862,-3854,-3848,-3840,-3832,-3824,-3818,-3810,-3802,-3794,-3789,-3781,-3773,-3767,-3759,-3751,-3745,-3737,-3729,-3723,-3715,-3707,-3701,-3693,-3685,-3679,-3671,-3665,-3657,-3651,-3643,-3635,-3629,-3621,-3615,-3607,
    -3601,-3593,-3587,-3579,-3573,-3565,-3559,-3551,-3545,-3537,-3531,-3523,-3517,-3509,-3503,-3497,-3489,-3483,-3475,-3469,-3461,-3455,-3449,-3441,-3435,-3429,-3421,-3415,-3409,-3401,-3395,-3389,-3381,-3375,-3369,-3362,-3356,-3350,-3342,-3336,-3330,-3324,-3316,-3310,-3304,-3298,-3290,-3284,-3278,-3272,-3266,-3258,-3252,-3246,-3240,-3234,-3228,-3220,-3214,-3208,-3202,-3196,-3190,-3184,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3128,-3122,-3116,-3110,-3104,-3098,-3090,-3084,
    -3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3026,-3020,-3014,-3008,-3002,-2996,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2948,-2945,-2939,-2933,-2927,-2921,-2915,-2909,-2905,-2899,-2893,-2887,-2881,-2875,-2871,-2865,-2859,-2853,-2847,-2843,-2837,-2831,-2825,-2819,-2815,-2809,-2803,-2797,-2793,-2787,-2781,-2777,-2771,-2765,-2759,-2755,-2749,-2743,-2739,-2733,-2727,-2723,-2717,-2711,-2707,-2701,-2695,-2691,-2685,-2679,-2675,-2669,-2665,-2659,-2653,-2649,-2643,-2639,
    -2633,-2627,-2623,-2591,-2520,-2867,-3048,317,5899,7999,7470,7284,7344,7340,7326,7312,7296,7282,7268,7254,7240,7226,7212,7198,7184,7170,7157,7143,7129,7115,7101,7087,7073,7059,7045,7031,7017,7003,6989,6977,6963,6949,6935,6921,6909,6895,6881,6867,6855,6841,6827,6813,6801,6787,6773,6761,6747,6736,6722,6708,6696,6682,6670,6656,6644,6630,6618,6604,6592,6578,6566,6552,6540,6528,6514,6502,6490,6476,6460,6386,
    6420,6975,5866,744,-3653,-4028,-3521,-3541,-3579,-3571,-3565,-3557,-3551,-3543,-3537,-3531,-3523,-3517,-3509,-3503,-3495,-3489,-3481,-3475,-3469,-3461,-3455,-3449,-3441,-3435,-3427,-3421,-3415,-3407,-3401,-3395,-3387,-3381,-3375,-3368,-3362,-3356,-3350,-3342,-3336,-3330,-3322,-3316,-3310,-3304,-3298,-3290,-3284,-3278,-3272,-3264,-3258,-3252,-3246,-3240,-3234,-3226,-3220,-3214,-3208,-3202,-3196,-3190,-3182,-3176,-3170,-3164,-3158,-3152,-3146,-3140,-3134,-3128,-3122,-3114,
    -3108,-3102,-3096,-3090,-3084,-3078,-3072,-3066,-3060,-3054,-3048,-3042,-3036,-3030,-3024,-3018,-3012,-3006,-3002,-2996,-2990,-2984,-2978,-2972,-2966,-2960,-2954,-2948,-2943,-2939,-2933,-2927,-2921,-2915,-2909,-2903,-2899,-2893,-2887,-2881,-2875,-2869,-2865,-2859,-2853,-2847,-2841,-2837,-2831,-2825,-2819,-2815,-2809,-2803,-2797,-2793,-2787,-2781,-2775,-2771,-2765,-2759,-2755,-2749,-2743,-2739,-2733,-2727,-2721,-2717,-2711,-2707,-2701,-2695,-2691,-2685,-2679,-2675,-2669,-2663,
    -2659,-2653,-2649,-2643,-2637,-2633,-2627,-2623,-2617,-2613,-2607,-2603,-2597,-2591,-2587,-2581,-2577,-2571,-2567,-2561,-2557,-2551,-2547,-2541,-2537,-2531,-2527,-2522,-2518,-2512,-2508,-2504,-2498,-2494,-2488,-2484,-2478,-2474,-2468,-2464,-2460,-2454,-2450,-2444,-2440,-2436,-2430,-2426,-2422,-2416,-2412,-2406,-2402,-2398,-2392,-2388,-2384,-2378,-2374,-2370,-2364,-2360,-2356,-2350,-2346,-2340,-2290,-2266,-2775,-2298,2218,7236,8206,7625,7578,7621,7609,7595,7579,7566,
    7552,7536,7522,7506,7492,7478,7462,7448,7434,7418,7404,7390,7376,7362,7346,7332,7318,7304,7290,7274,7260,7246,7232,7218,7204,7190,7176,7162,7149,7135,7121,7107,7093,7079,7065,7051,7037,7023,7011,6997,6983,6969,6955,6941,6929,6915,6901,6887,6873,6861,6847,6833,6821,6807,6793,6781,6767,6753,6741,6728,6716,6702,6688,6672,6596,6642,7198,5971,768,-3509,-3798,-3308,-3336,-3369,-3364,-3358,-3352,-3344,-3338,-3332,
    -3326,-3318,-3312,-3306,-3300,-3292,-3286,-3280,-3274,-3268,-3260,-3254,-3248,-3242,-3236,-3228,-3222,-3216,-3210,-3204,-3198,-3192,-3184,-3178,-3172,-3166,-3160,-3154,-3148,-3142,-3136,-3130,-3124,-3118,-3110,-3104,-3098,-3092,-3086,-3080,-3074,-3068,-3062,-3056,-3050,-3044,-3038,-3032,-3026,-3020,-3014,-3010,-3004,-2998,-2992,-2986,-2980,-2974,-2968,-2962,-2956,-2950,-2945,-2941,-2935,-2929,-2923,-2917,-2911,-2905,-2901,-2895,-2889,-2883,-2877,-2871,-2867,-2861,-2855,-2849,
    -2843,-2839,-2833,-2827,-2821,-2817,-2811,-2805,-2799,-2795,-2789,-2783,-2777,-2773,-2767,-2761,-2757,-2751,-2745,-2739,-2735,-2729,-2723,-2719,-2713,-2707,-2703,-2697,-2693,-2687,-2681,-2677,-2671,-2665,-2661,-2655,-2651,-2645,-2639,-2635,-2629,-2625,-2619,-2615,-2609,-2603,-2599,-2593,-2589,-2583,-2579,-2573,-2569,-2563,-2559,-2553,-2549,-2543,-2539,-2533,-2529,-2524,-2520,-2514,-2510,-2504,-2500,-2494,-2490,-2486,-2480,-2476,-2470,-2466,-2460,-2456,-2452,-2446,-2442,-2436,
    -2432,-2428,-2422,-2418,-2414,-2408,-2404,-2400,-2394,-2390,-2386,-2380,-2376,-2372,-2366,-2362,-2358,-2352,-2348,-2344,-2338,-2334,-2330,-2326,-2320,-2316,-2312,-2306,-2302,-2298,-2294,-2288,-2284,-2280,-2276,-2272,-2266,-2262,-2258,-2254,-2248,-2244,-2240,-2236,-2232,-2226,-2222,-2218,-2214,-2210,-2206,-2200,-2196,-2192,-2188,-2184,-2180,-2142,-2085,-2500,-2468,1368,6793,8427,7853,7725,7779,7771,7757,7741,7727,7711,7695,7681,7665,7651,7635,7621,7605,7591,
    7578,7562,7548,7532,7518,7504,7488,7474,7460,7444,7430,7416,7400,7386,7372,7358,7344,7328,7314,7300,7286,7272,7258,7244,7228,7214,7200,7186,7172,7158,7145,7131,7117,7103,7089,7071,7037,7081,7204,6520,4880,3958,4028,4112,4084,4068,4062,4054,4046,4038,4030,4022,4014,4006,3998,3982,3924,4040,4375,2877,-959,-3208,-3056,-2817,-2857,-2869,-2863,-2859,-2853,-2847,-2841,-2835,-2831,-2825,-2819,-2813,-2809,-2803,-2797,-2791,
    -2787,-2781,-2775,-2769,-2765,-2759,-2753,-2749,-2743,-2737,-2733,-2727,-2721,-2717,-2711,-2705,-2701,-2695,-2689,-2685,-2679,-2673,-2669,-2663,-2659,-2653,-2647,-2643,-2637,-2633,-2627,-2621,-2617,-2611,-2607,-2601,-2597,-2591,-2587,-2581,-2577,-2571,-2567,-2561,-2557,-2551,-2547,-2541,-2537,-2531,-2527,-2522,-2518,-2512,-2508,-2502,-2498,-2492,-2488,-2482,-2478,-2474,-2468,-2464,-2458,-2454,-2450,-2444,-2440,-2434,-2430,-2426,-2420,-2416,-2412,-2406,-2402,-2396,-2392,-2388,
    -2382,-2378,-2374,-2368,-2364,-2360,-2356,-2350,-2346,-2342,-2336,-2332,-2328,-2322,-2318,-2314,-2310,-2304,-2300,-2296,-2292,-2286,-2282,-2278,-2274,-2270,-2264,-2260,-2256,-2252,-2246,-2242,-2238,-2234,-2230,-2224,-2220,-2216,-2212,-2208,-2204,-2198,-2194,-2190,-2186,-2182,-2178,-2174,-2170,-2164,-2160,-2156,-2152,-2148,-2144,-2140,-2136,-2132,-2126,-2122,-2118,-2114,-2110,-2106,-2103,-2099,-2095,-2091,-2087,-2083,-2079,-2075,-2071,-2067,-2063,-2059,-2055,-2051,-2047,-2043,
    -2039,-2035,-2031,-2027,-2023,-2019,-2015,-2011,-2007,-2003,-1999,-1995,-1991,-1987,-1983,-1979,-1975,-1971,-1967,-1963,-1959,-1957,-1953,-1949,-1945,-1941,-1937,-1933,-1929,-1925,-1921,-1919,-1915,-1911,-1907,-1903,-1899,-1895,-1891,-1889,-1885,-1881,-1877,-1873,-1869,-1867,-1863,-1859,-1855,-1851,-1847,-1845,-1841,-1837,-1833,-1829,-1793,-1777,-2124,-1799,1290,4726,5389,4994,4960,4992,4984,4974,4964,4954,4944,4936,4926,4916,4906,4896,4886,4878,4868,4858,
    4848,4840,4830,4820,4810,4802,4792,4782,4774,4764,4754,4746,4736,4726,4718,4708,4700,4690,4680,4672,4662,4654,4644,4634,4627,4617,4609,4599,4591,4581,4573,4563,4555,4547,4537,4529,4519,4511,4501,4493,4485,4475,4467,4457,4449,4441,4431,4423,4415,4405,4397,4389,4379,4371,4363,4355,4321,4277,4563,4513,1837,-1861,-2939,-2549,-2474,-2516,-2516,-2510,-2506,-2500,-2496,-2490,-2486,-2482,-2476,-2472,-2466,-2462,-2458,-2452,
    -2448,-2442,-2438,-2434,-2428,-2424,-2418,-2414,-2410,-2404,-2400,-2396,-2390,-2386,-2382,-2376,-2372,-2368,-2362,-2358,-2354,-2348,-2344,-2340,-2336,-2330,-2326,-2322,-2316,-2312,-2308,-2304,-2298,-2294,-2290,-2286,-2280,-2276,-2272,-2268,-2262,-2258,-2254,-2250,-2246,-2240,-2236,-2232,-2228,-2224,-2220,-2214,-2210,-2206,-2202,-2198,-2194,-2188,-2184,-2180,-2176,-2172,-2168,-2164,-2158,-2154,-2150,-2146,-2142,-2138,-2134,-2130,-2126,-2122,-2118,-2112,-2108,-2105,-2101,-2097,
    -2093,-2089,-2085,-2081,-2077,-2073,-2069,-2065,-2061,-2057,-2053,-2049,-2045,-2041,-2037,-2033,-2029,-2025,-2021,-2017,-2013,-2009,-2005,-2001,-1997,-1993,-1989,-1985,-1981,-1977,-1973,-1971,-1967,-1963,-1959,-1955,-1951,-1947,-1943,-1939,-1935,-1931,-1929,-1925,-1921,-1917,-1913,-1909,-1905,-1901,-1899,-1895,-1891,-1887,-1883,-1879,-1875,-1873,-1869,-1865,-1861,-1857,-1853,-1851,-1847,-1843,-1839,-1835,-1833,-1829,-1825,-1821,-1817,-1815,-1811,-1807,-1803,-1801,-1797,-1793,
    -1789,-1787,-1783,-1779,-1775,-1773,-1769,-1765,-1761,-1759,-1755,-1751,-1749,-1745,-1741,-1737,-1735,-1731,-1727,-1725,-1721,-1717,-1715,-1711,-1707,-1705,-1701,-1697,-1695,-1691,-1687,-1685,-1682,-1678,-1676,-1672,-1668,-1666,-1662,-1658,-1656,-1652,-1650,-1646,-1642,-1640,-1636,-1634,-1630,-1626,-1624,-1620,-1618,-1614,-1610,-1608,-1604,-1602,-1598,-1596,-1592,-1590,-1564,-1522,-1807,-1785,840,4553,5670,5277,5189,5227,5221,5211,5201,5191,5181,5171,5161,5151,
    5141,5131,5121,5111,5101,5091,5081,5071,5061,5052,5042,5032,5022,5012,5002,4992,4982,4974,4964,4954,4944,4934,4924,4914,4906,4896,4886,4876,4866,4858,4848,4838,4828,4820,4810,4800,4792,4782,4772,4764,4754,4744,4736,4726,4716,4708,4698,4688,4680,4670,4662,4652,4644,4634,4627,4617,4607,4599,4589,4581,4571,4563,4555,4545,4533,4483,4509,4890,4090,558,-2410,-2635,-2296,-2312,-2336,-2332,-2328,-2324,-2318,-2314,
    -2310,-2306,-2300,-2296,-2292,-2288,-2282,-2278,-2274,-2270,-2264,-2260,-2256,-2252,-2248,-2242,-2238,-2234,-2230,-2226,-2220,-2216,-2212,-2208,-2204,-2200,-2194,-2190,-2186,-2182,-2178,-2174,-2170,-2166,-2160,-2156,-2152,-2148,-2144,-2140,-2136,-2132,-2128,-2124,-2118,-2114,-2110,-2106,-2103,-2099,-2095,-2091,-2087,-2083,-2079,-2075,-2071,-2067,-2063,-2059,-2055,-2051,-2047,-2043,-2039,-2035,-2031,-2027,-2023,-2019,-2015,-2011,-2007,-2003,-1999,-1995,-1991,-1987,-1983,-1979,
    -1975,-1971,-1967,-1963,-1961,-1957,-1953,-1949,-1945,-1941,-1937,-1933,-1929,-1925,-1923,-1919,-1915,-1911,-1907,-1903,-1899,-1895,-1893,-1889,-1885,-1881,-1877,-1873,-1871,-1867,-1863,-1859,-1855,-1851,-1849,-1845,-1841,-1837,-1833,-1831,-1827,-1823,-1819,-1815,-1813,-1809,-1805,-1801,-1799,-1795,-1791,-1787,-1785,-1781,-1777,-1773,-1771,-1767,-1763,-1759,-1757,-1753,-1749,-1747,-1743,-1739,-1735,-1733,-1729,-1725,-1723,-1719,-1715,-1713,-1709,-1705,-1703,-1699,-1695,-1693,
    -1689,-1685,-1684,-1680,-1676,-1674,-1670,-1666,-1664,-1660,-1658,-1654,-1650,-1648,-1644,-1642,-1638,-1634,-1632,-1628,-1626,-1622,-1618,-1616,-1612,-1610,-1606,-1602,-1600,-1596,-1594,-1590,-1588,-1584,-1582,-1578,-1574,-1572,-1568,-1566,-1562,-1560,-1556,-1554,-1550,-1548,-1544,-1542,-1538,-1536,-1532,-1530,-1526,-1524,-1520,-1518,-1514,-1512,-1508,-1506,-1502,-1500,-1496,-1494,-1490,-1488,-1484,-1482,-1480,-1476,-1474,-1470,-1468,-1464,-1462,-1458,-1430,-1436,-1684,-1288,
    919,2984,3232,2990,2988,3006,3000,2994,2988,2982,2976,2970,2964,2958,2952,2948,2943,2937,2931,2925,2919,2913,2909,2903,2897,2891,2885,2879,2875,2869,2863,2857,2851,2845,2841,2835,2829,2823,2819,2813,2807,2801,2797,2791,2785,2779,2775,2769,2763,2759,2753,2747,2741,2737,2731,2725,2721,2715,2709,2705,2699,2693,2689,2683,2679,2673,2667,2663,2657,2653,2647,2641,2637,2631,2627,2621,2615,2611,2605,2601,
    2595,2571,2551,2763,2625,708,-1616,-2156,-1897,-1867,-1891,-1889,-1885,-1881,-1879,-1875,-1871,-1867,-1863,-1859,-1857,-1853,-1849,-1845,-1841,-1839,-1835,-1831,-1827,-1823,-1821,-1817,-1813,-1809,-1805,-1803,-1799,-1795,-1791,-1789,-1785,-1781,-1777,-1775,-1771,-1767,-1763,-1761,-1757,-1753,-1751,-1747,-1743,-1739,-1737,-1733,-1729,-1727,-1723,-1719,-1717,-1713,-1709,-1707,-1703,-1699,-1697,-1693,-1689,-1687,-1684,-1680,-1678,-1674,-1670,-1668,-1664,-1662,-1658,-1654,
    -1652,-1648,-1644,-1642,-1638,-1636,-1632,-1628,-1626,-1622,-1620,-1616,-1612,-1610,-1606,-1604,-1600,-1598,-1594,-1590,-1588,-1584,-1582,-1578,-1576,-1572,-1570,-1566,-1564,-1560,-1558,-1554,-1550,-1548,-1544,-1542,-1538,-1536,-1532,-1530,-1526,-1524,-1520,-1518,-1514,-1512,-1508,-1506,-1504,-1500,-1498,-1494,-1492,-1488,-1486,-1482,-1480,-1476,-1474,-1472,-1468,-1466,-1462,-1460,-1456,-1454,-1452,-1448,-1446,-1442,-1440,-1436,-1434,-1432,-1428,-1426,-1422,-1420,-1418,-1414,
    -1412,-1408,-1406,-1404,-1400,-1398,-1396,-1392,-1390,-1388,-1384,-1382,-1378,-1376,-1374,-1370,-1368,-1366,-1362,-1360,-1358,-1354,-1352,-1350,-1346,-1344,-1342,-1340,-1336,-1334,-1332,-1328,-1326,-1324,-1320,-1318,-1316,-1314,-1310,-1308,-1306,-1302,-1300,-1298,-1296,-1292,-1290,-1288,-1286,-1282,-1280,-1278,-1274,-1272,-1270,-1268,-1266,-1263,-1261,-1259,-1257,-1253,-1251,-1249,-1247,-1243,-1241,-1239,-1237,-1235,-1231,-1229,-1227,-1225,-1223,-1219,-1217,-1215,-1213,-1211,
    -1207,-1205,-1203,-1201,-1199,-1197,-1193,-1191,-1189,-1187,-1185,-1183,-1179,-1177,-1175,-1173,-1171,-1169,-1161,-1127,-1193,-1428,-542,1941,3501,3435,3262,3286,3292,3284,3278,3272,3266,3260,3252,3246,3240,3234,3228,3222,3214,3208,3202,3196,3190,3184,3178,3172,3164,3158,3152,3146,3140,3134,3128,3122,3116,3110,3104,3098,3092,3086,3080,3074,3068,3062,3056,3050,3044,3038,3032,3026,3020,3014,3008,3002,2996,2990,2984,2978,
    2972,2966,2960,2954,2950,2945,2939,2933,2927,2921,2915,2909,2905,2899,2893,2887,2881,2875,2871,2865,2859,2853,2847,2843,2837,2831,2817,2779,2907,3040,1685,-840,-1937,-1729,-1628,-1658,-1662,-1658,-1656,-1652,-1650,-1646,-1642,-1640,-1636,-1634,-1630,-1626,-1624,-1620,-1618,-1614,-1610,-1608,-1604,-1602,-1598,-1596,-1592,-1588,-1586,-1582,-1580,-1576,-1574,-1570,-1568,-1564,-1562,-1558,-1554,-1552,-1548,-1546,-1542,-1540,-1536,-1534,-1530,-1528,
    -1524,-1522,-1518,-1516,-1512,-1510,-1508,-1504,-1502,-1498,-1496,-1492,-1490,-1486,-1484,-1480,-1478,-1474,-1472,-1470,-1466,-1464,-1460,-1458,-1454,-1452,-1450,-1446,-1444,-1440,-1438,-1434,-1432,-1430,-1426,-1424,-1420,-1418,-1416,-1412,-1410,-1408,-1404,-1402,-1398,-1396,-1394,-1390,-1388,-1386,-1382,-1380,-1378,-1374,-1372,-1370,-1366,-1364,-1362,-1358,-1356,-1354,-1350,-1348,-1346,-1342,-1340,-1338,-1334,-1332,-1330,-1326,-1324,-1322,-1320,-1316,-1314,-1312,-1308,-1306,
    -1304,-1302,-1298,-1296,-1294,-1290,-1288,-1286,-1284,-1280,-1278,-1276,-1274,-1270,-1268,-1266,-1264,-1261,-1259,-1257,-1255,-1253,-1249,-1247,-1245,-1243,-1239,-1237,-1235,-1233,-1231,-1227,-1225,-1223,-1221,-1219,-1215,-1213,-1211,-1209,-1207,-1203,-1201,-1199,-1197,-1195,-1193,-1189,-1187,-1185,-1183,-1181,-1179,-1177,-1173,-1171,-1169,-1167,-1165,-1163,-1159,-1157,-1155,-1153,-1151,-1149,-1147,-1145,-1141,-1139,-1137,-1135,-1133,-1131,-1129,-1127,-1125,-1123,-1119,-1117,
    -1115,-1113,-1111,-1109,-1107,-1105,-1103,-1101,-1099,-1095,-1093,-1091,-1089,-1087,-1085,-1083,-1081,-1079,-1077,-1075,-1073,-1071,-1069,-1067,-1065,-1063,-1061,-1057,-1055,-1053,-1051,-1049,-1047,-1045,-1043,-1041,-1039,-1037,-1035,-1033,-1031,-1029,-1027,-1025,-1023,-1021,-1019,-1017,-1015,-1011,-985,-1021,-1211,-644,1213,2522,2526,2376,2390,2398,2392,2388,2384,2378,2374,2370,2364,2360,2356,2352,2346,2342,2338,2332,2328,2324,2318,2314,2310,2306,
    2300,2296,2292,2288,2282,2278,2274,2270,2266,2260,2256,2252,2248,2242,2238,2234,2230,2226,2222,2216,2212,2208,2204,2200,2196,2190,2186,2182,2178,2174,2170,2166,2160,2156,2152,2148,2144,2140,2136,2132,2128,2124,2118,2114,2110,2106,2103,2099,2095,2091,2087,2083,2079,2075,2071,2067,2063,2059,2055,2051,2033,2013,2162,2112,730,-1095,-1592,-1394,-1362,-1382,-1380,-1378,-1376,-1372,-1370,-1368,-1364,-1362,-1360,-1356,
    -1354,-1352,-1348,-1346,-1344,-1340,-1338,-1336,-1334,-1330,-1328,-1326,-1322,-1320,-1318,-1314,-1312,-1310,-1308,-1304,-1302,-1300,-1298,-1294,-1292,-1290,-1286,-1284,-1282,-1280,-1276,-1274,-1272,-1270,-1266,-1264,-1263,-1261,-1257,-1255,-1253,-1251,-1249,-1245,-1243,-1241,-1239,-1237,-1233,-1231,-1229,-1227,-1223,-1221,-1219,-1217,-1215,-1213,-1209,-1207,-1205,-1203,-1201,-1197,-1195,-1193,-1191,-1189,-1187,-1183,-1181,-1179,-1177,-1175,-1173,-1171,-1167,-1165,-1163,-1161,
    -1159,-1157,-1155,-1151,-1149,-1147,-1145,-1143,-1141,-1139,-1137,-1133,-1131,-1129,-1127,-1125,-1123,-1121,-1119,-1117,-1115,-1111,-1109,-1107,-1105,-1103,-1101,-1099,-1097,-1095,-1093,-1091,-1089,-1087,-1085,-1081,-1079,-1077,-1075,-1073,-1071,-1069,-1067,-1065,-1063,-1061,-1059,-1057,-1055,-1053,-1051,-1049,-1047,-1045,-1043,-1041,-1039,-1037,-1035,-1033,-1031,-1029,-1027,-1025,-1023,-1021,-1019,-1017,-1015,-1013,-1011,-1009,-1007,-1005,-1003,-1001,-999,-997,-995,-993,
    -991,-989,-987,-985,-983,-981,-979,-977,-975,-973,-971,-969,-967,-965,-963,-961,-961,-959,-957,-955,-953,-951,-949,-947,-945,-943,-941,-939,-937,-935,-935,-933,-931,-929,-927,-925,-923,-921,-919,-917,-915,-915,-913,-911,-909,-907,-905,-903,-901,-899,-899,-897,-895,-893,-891,-889,-887,-885,-885,-883,-881,-879,-877,-875,-873,-873,-871,-869,-867,-865,-863,-861,-861,-859,-857,-855,-853,-851,-851,-849,
    -847,-845,-843,-842,-842,-840,-838,-836,-834,-834,-832,-824,-798,-871,-1023,-183,1747,2775,2663,2555,2575,2577,2571,2567,2561,2557,2551,2547,2541,2537,2531,2527,2522,2518,2512,2508,2502,2498,2492,2488,2484,2478,2474,2468,2464,2458,2454,2450,2444,2440,2434,2430,2426,2420,2416,2412,2406,2402,2396,2392,2388,2382,2378,2374,2368,2364,2360,2356,2350,2346,2342,2336,2332,2328,2322,2318,2314,2310,2304,2300,
    2296,2292,2286,2282,2278,2274,2268,2264,2260,2256,2252,2246,2242,2238,2234,2230,2224,2220,2216,2212,2208,2204,2198,2194,2174,2162,2328,2192,686,-1063,-1436,-1241,-1223,-1241,-1239,-1237,-1235,-1233,-1229,-1227,-1225,-1223,-1221,-1217,-1215,-1213,-1211,-1209,-1205,-1203,-1201,-1199,-1197,-1195,-1191,-1189,-1187,-1185,-1183,-1181,-1177,-1175,-1173,-1171,-1169,-1167,-1165,-1161,-1159,-1157,-1155,-1153,-1151,-1149,-1145,-1143,-1141,-1139,-1137,-1135,
    -1133,-1131,-1129,-1125,-1123,-1121,-1119,-1117,-1115,-1113,-1111,-1109,-1107,-1105,-1101,-1099,-1097,-1095,-1093,-1091,-1089,-1087,-1085,-1083,-1081,-1079,-1077,-1075,-1073,-1071,-1067,-1065,-1063,-1061,-1059,-1057,-1055,-1053,-1051,-1049,-1047,-1045,-1043,-1041,-1039,-1037,-1035,-1033,-1031,-1029,-1027,-1025,-1023,-1021,-1019,-1017,-1015,-1013,-1011,-1009,-1007,-1005,-1003,-1001,-999,-997,-995,-993,-991,-989,-987,-985,-983,-981,-979,-977,-975,-975,-973,-971,
    -969,-967,-965,-963,-961,-959,-957,-955,-953,-951,-949,-947,-945,-943,-943,-941,-939,-937,-935,-933,-931,-929,-927,-925,-923,-923,-921,-919,-917,-915,-913,-911,-909,-907,-905,-905,-903,-901,-899,-897,-895,-893,-891,-891,-889,-887,-885,-883,-881,-879,-877,-877,-875,-873,-871,-869,-867,-865,-865,-863,-861,-859,-857,-855,-855,-853,-851,-849,-847,-845,-845,-843,-842,-840,-838,-836,-836,-834,-832,-830,
    -828,-828,-826,-824,-822,-820,-820,-818,-816,-814,-812,-812,-810,-808,-806,-804,-804,-802,-800,-798,-796,-796,-794,-792,-790,-790,-788,-786,-784,-784,-782,-780,-778,-776,-776,-774,-772,-770,-770,-768,-766,-764,-764,-762,-760,-758,-758,-756,-754,-754,-752,-750,-748,-748,-746,-744,-742,-742,-740,-738,-736,-736,-734,-730,-708,-728,-923,-484,1304,2743,2825,2657,2665,2673,2669,2663,2657,2653,2647,2643,
    2637,2631,2627,2621,2617,2611,2607,2601,2595,2591,2585,2581,2575,2571,2565,2561,2555,2551,2545,2541,2535,2531,2526,2522,2516,2512,2506,2502,2498,2492,2486,2472,2498,2529,2222,1622,1346,1388,1410,1400,1396,1392,1390,1388,1384,1382,1380,1376,1374,1370,1368,1366,1362,1360,1358,1354,1352,1350,1346,1344,1342,1340,1336,1334,1332,1328,1326,1324,1320,1318,1316,1314,1310,1308,1306,1302,1300,1296,1278,1294,
    1428,1095,-163,-1131,-1171,-1059,-1067,-1075,-1073,-1071,-1069,-1067,-1065,-1063,-1061,-1059,-1057,-1055,-1051,-1049,-1047,-1045,-1043,-1041,-1039,-1037,-1035,-1033,-1031,-1029,-1027,-1025,-1023,-1021,-1019,-1017,-1015,-1013,-1011,-1009,-1007,-1005,-1003,-1001,-999,-997,-995,-993,-991,-989,-989,-987,-985,-983,-981,-979,-977,-975,-973,-971,-969,-967,-965,-963,-961,-959,-957,-955,-953,-951,-951,-949,-947,-945,-943,-941,-939,-937,-935,-933,
    -931,-929,-929,-927,-925,-923,-921,-919,-917,-915,-913,-911,-911,-909,-907,-905,-903,-901,-899,-897,-895,-895,-893,-891,-889,-887,-885,-883,-881,-881,-879,-877,-875,-873,-871,-869,-869,-867,-865,-863,-861,-859,-859,-857,-855,-853,-851,-849,-849,-847,-845,-843,-842,-840,-840,-838,-836,-834,-832,-830,-830,-828,-826,-824,-822,-822,-820,-818,-816,-814,-814,-812,-810,-808,-806,-806,-804,-802,-800,-800,
    -798,-796,-794,-792,-792,-790,-788,-786,-786,-784,-782,-780,-778,-778,-776,-774,-772,-772,-770,-768,-766,-766,-764,-762,-760,-760,-758,-756,-754,-754,-752,-750,-750,-748,-746,-744,-744,-742,-740,-738,-738,-736,-734,-734,-732,-730,-728,-728,-726,-724,-724,-722,-720,-718,-718,-716,-714,-714,-712,-710,-710,-708,-706,-704,-704,-702,-700,-700,-698,-696,-696,-694,-692,-692,-690,-688,-688,-686,-684,-684,
    -682,-680,-680,-678,-676,-676,-674,-672,-672,-670,-668,-668,-666,-664,-664,-662,-660,-660,-658,-656,-656,-654,-654,-652,-650,-650,-648,-646,-646,-644,-642,-642,-640,-640,-638,-636,-636,-634,-632,-632,-630,-630,-628,-626,-626,-624,-614,-602,-702,-686,237,1516,1887,1751,1723,1735,1733,1731,1727,1723,1721,1717,1713,1709,1707,1703,1699,1697,1693,1689,1687,1684,1682,1678,1674,1672,1668,1664,1662,1658,
    1654,1652,1648,1646,1642,1638,1636,1632,1630,1626,1622,1620,1616,1614,1610,1606,1604,1600,1598,1594,1592,1588,1586,1582,1578,1576,1572,1570,1566,1564,1560,1558,1554,1552,1548,1546,1542,1540,1536,1534,1530,1528,1524,1522,1518,1516,1512,1510,1506,1504,1500,1498,1494,1492,1488,1486,1482,1480,1476,1474,1472,1468,1466,1452,1444,1560,1456,399,-802,-1047,-909,-899,-911,-909,-909,-907,-905,-903,-901,-899,
    -897,-895,-893,-893,-891,-889,-887,-885,-883,-881,-881,-879,-877,-875,-873,-871,-869,-869,-867,-865,-863,-861,-859,-857,-857,-855,-853,-851,-849,-847,-847,-845,-843,-842,-840,-840,-838,-836,-834,-832,-830,-830,-828,-826,-824,-822,-822,-820,-818,-816,-814,-814,-812,-810,-808,-806,-806,-804,-802,-800,-798,-798,-796,-794,-792,-792,-790,-788,-786,-784,-784,-782,-780,-778,-778,-776,-774,-772,-772,-770,
    -768,-766,-766,-764,-762,-760,-760,-758,-756,-754,-754,-752,-750,-748,-748,-746,-744,-744,-742,-740,-738,-738,-736,-734,-732,-732,-730,-728,-728,-726,-724,-724,-722,-720,-718,-718,-716,-714,-714,-712,-710,-710,-708,-706,-704,-704,-702,-700,-700,-698,-696,-696,-694,-692,-692,-690,-688,-688,-686,-684,-684,-682,-680,-680,-678,-676,-676,-674,-672,-672,-670,-668,-668,-666,-664,-664,-662,-660,-660,-658,
    -656,-656,-654,-654,-652,-650,-650,-648,-646,-646,-644,-642,-642,-640,-640,-638,-636,-636,-634,-632,-632,-630,-630,-628,-626,-626,-624,-624,-622,-620,-620,-618,-616,-616,-614,-614,-612,-610,-610,-608,-608,-606,-606,-604,-602,-602,-600,-600,-598,-596,-596,-594,-594,-592,-590,-590,-588,-588,-586,-586,-584,-582,-582,-580,-580,-578,-578,-576,-574,-574,-572,-572,-570,-570,-568,-568,-566,-564,-564,-562,
    -562,-560,-560,-558,-558,-556,-556,-554,-552,-552,-550,-550,-548,-548,-546,-546,-544,-544,-542,-542,-540,-538,-538,-536,-536,-534,-534,-532,-532,-530,-530,-528,-528,-526,-526,-524,-524,-522,-522,-520,-510,-498,-602,-576,363,1632,1989,1851,1825,1837,1835,1831,1829,1825,1821,1817,1813,1811,1807,1803,1799,1797,1793,1789,1785,1783,1779,1775,1771,1769,1765,1761,1757,1755,1751,1747,1745,1741,1737,1733,
    1731,1727,1723,1721,1717,1713,1711,1707,1703,1701,1697,1693,1691,1687,1684,1682,1678,1674,1672,1668,1664,1662,1658,1656,1652,1648,1646,1642,1638,1636,1632,1630,1626,1622,1618,1606,1632,1668,1370,772,490,532,556,548,544,544,542,542,540,540,538,538,536,536,534,534,532,530,530,528,522,522,578,502,-1,-506,-580,-522,-520,-524,-524,-522,-522,-520,-520,-518,-518,-516,-516,-514,
    -514,-512,-512,-510,-510,-508,-508,-506,-506,-504,-504,-502,-502,-500,-500,-498,-498,-496,-496,-494,-494,-492,-492,-490,-490,-488,-488,-486,-486,-484,-484,-482,-482,-480,-480,-480,-478,-478,-476,-476,-474,-474,-472,-472,-470,-470,-468,-468,-466,-466,-466,-464,-464,-462,-462,-460,-460,-458,-458,-458,-456,-456,-454,-454,-452,-452,-450,-450,-450,-448,-448,-446,-446,-444,-444,-442,-442,-442,-440,-440,
    -438,-438,-436,-436,-436,-434,-434,-432,-432,-430,-430,-430,-428,-428,-426,-426,-426,-424,-424,-422,-422,-421,-421,-421,-419,-419,-417,-417,-417,-415,-415,-413,-413,-413,-411,-411,-409,-409,-409,-407,-407,-405,-405,-405,-403,-403,-401,-401,-401,-399,-399,-397,-397,-397,-395,-395,-395,-393,-393,-391,-391,-391,-389,-389,-387,-387,-387,-385,-385,-385,-383,-383,-381,-381,-381,-379,-379,-379,-377,-377,
    -375,-375,-375,-373,-373,-373,-371,-371,-371,-369,-369,-367,-367,-367,-365,-365,-365,-363,-363,-363,-361,-361,-361,-359,-359,-359,-357,-357,-355,-355,-355,-353,-353,-353,-351,-351,-351,-349,-349,-349,-347,-347,-347,-345,-345,-345,-343,-343,-343,-341,-341,-341,-339,-339,-339,-337,-337,-337,-335,-335,-335,-333,-333,-333,-331,-331,-331,-329,-329,-329,-327,-327,-327,-325,-325,-325,-325,-323,-323,-323,
    -321,-321,-321,-319,-319,-319,-317,-317,-317,-315,-315,-315,-315,-313,-313,-313,-311,-311,-311,-309,-309,-309,-307,-307,-307,-307,-305,-305,-305,-303,-303,-303,-303,-301,-301,-301,-299,-299,-299,-297,-297,-297,-297,-295,-295,-295,-289,-285,-337,-301,155,698,818,756,750,754,754,752,750,750,748,746,744,744,742,740,740,738,736,734,734,732,730,730,728,726,724,724,722,720,
    720,718,716,714,714,712,710,710,708,706,706,704,702,700,700,698,696,696,694,692,692,690,688,688,686,684,684,682,680,680,678,676,676,674,672,672,670,668,668,666,664,664,662,660,660,658,656,656,654,654,652,650,650,648,646,646,644,642,642,640,640,638,636,636,634,632,632,630,628,622,622,680,586,67,-419,-478,-422,-422,-426,-424,
    -424,-424,-422,-422,-421,-421,-421,-419,-419,-417,-417,-415,-415,-415,-413,-413,-411,-411,-411,-409,-409,-407,-407,-407,-405,-405,-403,-403,-403,-401,-401,-401,-399,-399,-397,-397,-397,-395,-395,-393,-393,-393,-391,-391,-389,-389,-389,-387,-387,-387,-385,-385,-383,-383,-383,-381,-381,-381,-379,-379,-377,-377,-377,-375,-375,-375,-373,-373,-373,-371,-371,-369,-369,-369,-367,-367,-367,-365,-365,-365,
    -363,-363,-363,-361,-361,-359,-359,-359,-357,-357,-357,-355,-355,-355,-353,-353,-353,-351,-351,-351,-349,-349,-349,-347,-347,-347,-345,-345,-345,-343,-343,-343,-341,-341,-341,-339,-339,-339,-337,-337,-337,-335,-335,-335,-333,-333,-333,-331,-331,-331,-329,-329,-329,-327,-327,-327,-325,-325,-325,-323,-323,-323,-321,-321,-321,-321,-319,-319,-319,-317,-317,-317,-315,-315,-315,-313,-313,-313,-313,-311,
    -311,-311,-309,-309,-309,-307,-307,-307,-307,-305,-305,-305,-303,-303,-303,-301,-301,-301,-301,-299,-299,-299,-297,-297,-297,-297,-295,-295,-295,-293,-293,-293,-291,-291,-291,-291,-289,-289,-289,-289,-287,-287,-287,-285,-285,-285,-285,-283,-283,-283,-281,-281,-281,-281,-279,-279,-279,-279,-277,-277,-277,-275,-275,-275,-275,-273,-273,-273,-273,-271,-271,-271,-271,-269,-269,-269,-267,-267,-267,-267,
    -265,-265,-265,-265,-263,-263,-263,-263,-261,-261,-261,-261,-259,-259,-259,-259,-257,-257,-257,-257,-255,-255,-255,-255,-253,-253,-253,-253,-251,-251,-251,-251,-249,-249,-249,-249,-247,-247,-247,-247,-245,-245,-245,-245,-243,-243,-243,-243,-243,-241,-241,-241,-241,-239,-239,-239,-239,-237,-237,-237,-237,-235,-235,-235,-233,-225,-257,-285,47,638,881,830,806,812,812,810,810,808,806,804,
    804,802,800,798,796,796,794,792,790,788,788,786,784,782,782,780,778,776,776,774,772,770,770,768,766,764,764,762,760,758,758,756,754,752,752,750,748,746,746,744,742,740,740,738,736,736,734,732,730,730,728,726,726,724,722,720,720,718,716,716,714,712,710,710,708,706,706,704,702,702,700,698,698,696,694,694,692,690,690,688,
    686,684,684,682,680,680,678,676,676,674,672,668,662,710,686,247,-307,-446,-387,-377,-383,-383,-383,-381,-381,-381,-379,-379,-379,-377,-377,-377,-375,-375,-373,-373,-373,-371,-371,-371,-369,-369,-369,-367,-367,-365,-365,-365,-363,-363,-363,-361,-361,-361,-359,-359,-359,-357,-357,-357,-355,-355,-353,-353,-353,-351,-351,-351,-349,-349,-349,-347,-347,-347,-345,-345,-345,-343,-343,-343,
    -341,-341,-341,-339,-339,-339,-337,-337,-337,-335,-335,-335,-333,-333,-333,-331,-331,-331,-329,-329,-329,-327,-327,-327,-327,-325,-325,-325,-323,-323,-323,-321,-321,-321,-319,-319,-319,-317,-317,-317,-315,-315,-315,-315,-313,-313,-313,-311,-311,-311,-309,-309,-309,-309,-307,-307,-307,-305,-305,-305,-303,-303,-303,-303,-301,-301,-301,-299,-299,-299,-297,-297,-297,-297,-295,-295,-295,-293,-293,-293,
    -293,-291,-291,-291,-289,-289,-289,-289,-287,-287,-287,-285,-285,-285,-285,-283,-283,-283,-283,-281,-281,-281,-279,-279,-279,-279,-277,-277,-277,-277,-275,-275,-275,-273,-273,-273,-273,-271,-271,-271,-271,-269,-269,-269,-269,-267,-267,-267,-267,-265,-265,-265,-263,-263,-263,-263,-261,-261,-261,-261,-259,-259,-259,-259,-257,-257,-257,-257,-255,-255,-255,-255,-253,-253,-253,-253,-251,-251,-251,-251,
    -249,-249,-249,-249,-247,-247,-247,-247,-247,-245,-245,-245,-245,-243,-243,-243,-243,-241,-241,-241,-241,-239,-239,-239,-239,-237,-237,-237,-237,-237,-235,-235,-235,-235,-233,-233,-233,-233,-233,-231,-231,-231,-231,-229,-229,-229,-229,-227,-227,-227,-227,-227,-225,-225,-225,-225,-223,-223,-223,-223,-223,-221,-221,-221,-221,-221,-219,-219,-219,-219,-217,-217,-217,-217,-217,-215,-215,-215,-215,-215,
    -213,-213,-213,-213,-213,-211,-211,-211,-211,-209,-209,-209,-209,-209,-207,-207,-203,-197,-239,-245,137,716,909,849,834,840,840,838,836,834,832,830,830,828,826,824,822,822,820,818,816,814,814,812,810,808,806,806,804,802,800,800,798,796,794,792,792,790,788,786,786,784,782,780,778,778,776,774,772,772,770,768,766,766,764,762,760,760,758,756,
    754,754,752,750,748,748,746,744,744,742,740,738,738,736,734,732,732,730,728,728,726,724,722,722,720,718,718,716,714,714,712,710,708,708,706,704,704,702,700,700,698,696,696,694,692,690,690,684,678,728,700,255,-297,-428,-369,-361,-367,-367,-367,-365,-365,-365,-363,-363,-363,-361,-361,-361,-359,-359,-357,-357,-357,-355,-355,-355,-353,-353,-353,-351,
    -351,-351,-349,-349,-349,-347,-347,-347,-345,-345,-345,-343,-343,-343,-341,-341,-341,-339,-339,-339,-337,-337,-337,-335,-335,-335,-333,-333,-333,-331,-331,-331,-329,-329,-329,-327,-327,-327,-325,-325,-325,-323,-323,-323,-323,-321,-321,-321,-319,-319,-319,-317,-317,-317,-315,-315,-315,-313,-313,-313,-313,-311,-311,-311,-309,-309,-309,-307,-307,-307,-307,-305,-305,-305,-303,-303,-303,-301,-301,-301,
    -301,-299,-299,-299,-297,-297,-297,-297,-295,-295,-295,-293,-293,-293,-293,-291,-291,-291,-289,-289,-289,-289,-287,-287,-287,-285,-285,-285,-285,-283,-283,-283,-281,-281,-281,-281,-279,-279,-279,-279,-277,-277,-277,-275,-275,-275,-275,-273,-273,-273,-273,-271,-271,-271,-271,-269,-269,-269,-267,-267,-267,-267,-265,-265,-265,-265,-263,-263,-263,-263,-261,-261,-261,-261,-259,-259,-259,-259,-257,-257,
    -257,-257,-255,-255,-255,-255,-253,-253,-253,-253,-251,-251,-251,-251,-249,-249,-249,-249,-247,-247,-247,-247,-245,-245,-245,-245,-243,-243,-243,-243,-243,-241,-241,-241,-241,-239,-239,-239,-239,-237,-237,-237,-237,-235,-235,-235,-235,-235,-233,-233,-233,-233,-231,-231,-231,-231,-231,-229,-229,-229,-229,-227,-227,-227,-227,-227,-225,-225,-225,-225,-223,-223,-223,-223,-223,-221,-221,-221,-221,-219,
    -219,-219,-219,-219,-217,-217,-217,-217,-217,-215,-215,-215,-215,-215,-213,-213,-213,-213,-211,-211,-211,-211,-211,-209,-209,-209,-209,-209,-207,-207,-207,-207,-207,-205,-205,-205,-205,-205,-203,-203,-203,-203,-203,-201,-201,-201,-201,-201,-199,-199,-199,-199,-199,-197,-197,-197,-197,-197,-195,-195,-195,-195,-195,-195,-193,-193,-193,-193,-193,-191,-191,-191,-191,-191,-189,-189,-189,-189,-189,-189,
    -187,-187,-187,-187,-187,-185,-185,-185,-185,-185,-185,-183,-183,-183,-183,-183,-181,-181,-181,-181,-181,-181,-179,-179,-179,-179,-179,-179,-177,-177,-177,-177,-177,-177,-175,-175,-175,-175,-175,-173,-173,-173,-173,-173,-173,-171,-171,-171,-171,-171,-171,-169,-169,-169,-169,-169,-169,-167,-167,-167,-167,-167,-167,-165,-165,-165,-165,-165,-165,-165,-163,-163,-163,-163,-163,-163,-161,-161,-161,-161,
    -161,-161,-159,-159,-159,-159,-159,-159,-159,-157,-157,-157,-157,-157,-157,-155,-155,-155,-155,-155,-155,-155,-153,-153,-153,-153,-153,-153,-151,-151,-151,-151,-151,-151,-151,-149,-149,-149,-149,-149,-149,-149,-147,-147,-147,-147,-147,-147,-147,-145,-145,-145,-145,-145,-145,-145,-143,-143,-143,-143,-143,-143,-143,-141,-141,-141,-141,-141,-141,-141,-141,-139,-139,-139,-139,-139,-139,-139,-137,-137,
    -137,-137,-137,-137,-137,-135,-135,-135,-135,-135,-135,-135,-135,-133,-133,-133,-133,-133,-133,-133,-133,-131,-131,-131,-131,-131,-131,-131,-129,-129,-129,-129,-129,-129,-129,-129,-127,-127,-127,-127,-127,-127,-127,-127,-125,-125,-125,-125,-125,-125,-125,-125,-125,-123,-123,-123,-123,-123,-123,-123,-123,-121,-121,-121,-121,-121,-121,-121,-121,-119,-119,-119,-119,-119,-119,-119,-119,-119,-117,-117,
    -117,-117,-117,-117,-117,-117,-117,-115,-115,-115,-115,-115,-115,-115,-115,-115,-113,-113,-113,-113,-113,-113,-113,-113,-113,-111,-111,-111,-111,-111,-111,-111,-111,-111,-109,-109,-109,-109,-109,-109,-109,-109,-109,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-103,-103,-103,-103,-103,-103,-103,-103,-103,-101,-101,-101,-101,-101,-101,-101,-101,
    -101,-101,-101,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-93,-93,-93,-93,-93,-93,-93,-93,-93,-93,-93,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-91,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-89,-87,-87,-87,-87,-87,-87,-87,-87,-87,-87,-87,-87,
    -85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-83,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-79,-77,-77,-77,-77,-77,-77,-77,-77,-77,-77,-77,-77,-77,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-73,-73,-73,
    -73,-73,-73,-73,-73,-73,-73,-73,-73,-73,-73,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-69,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-67,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-63,-63,-63,-63,-63,-63,-63,-63,-63,
    -63,-63,-63,-63,-63,-63,-63,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-59,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-55,-53,-53,
    -53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-53,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-51,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-49,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,-47,
    -45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-39,-39,-39,-39,-39,-39,-39,-39,-39,
    -39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-33,-33,-33,-33,-33,-33,
    -33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,
    -29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,
    -25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,
    -21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-17,
    -17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,
    -15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-15,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,
    -13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,
    -11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,
    -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,
    -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,
    -7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-5,
    -5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,
    -5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,
    -5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,
    -3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,
    -3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,
    -3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,
    -3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};





enum State {
	INTRO_SCREEN,
	RESET_LEVEL1,
	LEVEL_1,
	WIN,
	LOSE
};

enum State gameStatus;

int highScore = 0;
int playerScore = 0;

volatile uint8_t refresh = 0;
volatile uint8_t player_fire = 0;
volatile uint8_t continue_input = 0;

extern uint8_t Ship[];
int ship_x, ship_y = 0;
int ship_px, ship_py = 0;
int ship_health = 1;

extern uint8_t Missile[];
int player_missile_xpos[3];
int player_missile_ypos[3];
int player_missile_prev_xpos[3];
int player_missile_prev_ypos[3];
int player_missile_status[3] = {0};

int barrier_x_pos[3] = {0};
int barrier_y_pos[3] = {0};
int barrier_health[3] = {0};

extern uint8_t Invader1[];

int invader1_xpos[4][6] = {0};
int invader1_ypos[4][6] = {0};
int invader1_prev_xpos[4][6] = {0};
int invader1_prev_ypos[4][6] = {0};
int invader1_status[4][6] = {0};
int row_to_move = 3;
int inv1_direction = 1;
int all_invader1_alive = 1; // 1: all alive; 0: all dead


int invader1_fire_sequence[] = {
20, 4, 10, 9, 23, 6, 16, 22, 12,
11, 3, 6, 17, 8, 23, 7, 22, 12, 16,
22, 17, 6, 22, 22, 4, 2, 17, 13, 3,
12, 12, 10, 3, 6, 14, 19, 22, 5, 8,
7, 16, 23, 5, 0, 8, 23, 9, 15, 19, 9,
5, 21, 8, 4, 15, 3, 10, 21, 5, 3, 1,
19, 13, 10, 18, 22, 21, 15, 16, 14, 21,
5, 10, 4, 15, 4, 4, 20, 17, 17, 10, 10,
17, 7, 1, 3, 6, 4, 15, 0, 14, 17, 8, 9,
15, 21
};
int invader1_fire_index = 0;
int invader1_missile_xpos[6];
int invader1_missile_ypos[6];
int invader1_missile_prev_xpos[6];
int invader1_missile_prev_ypos[6];
int invader1_missile_status[6] = {0};

uint32_t ctr_lastcheck = 0;
uint32_t ctr_invader1_lastcheck = 0;
uint32_t ctr_invader1_fire = 0;

int inv1_x_pos_to_explode[3] = {0};
int inv1_y_pos_to_explode[3] = {0};
int inv1_explode_phase[3] = {0};

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
/* USER CODE BEGIN PFP */
void displayIntroScreen();
void displayGameOver();
void displayint(uint16_t val, uint32_t* screenptr);
void clearscreen();
void updatescreen();
void updatePlayerMissileStatus(int missile_index);
void updateEnemyMissileStatus(int missile_index);
void explodeInvader1();
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void displayIntroScreen()
{

	// Intro Screen
	uint8_t* title_screen = (uint8_t*) Title_Screen;
	uint8_t* screenptr = (uint8_t*) (0x20020000 + 40*320 + 37);
	for (int i = 0; i < 31; ++i) {
		for (int j = 0; j < 245; ++j) {
			*screenptr++ = *title_screen++;
		}
		screenptr += 75;
	}
	uint8_t* title_instuction = (uint8_t*) Title_Instruction;
	screenptr = (uint8_t*) (0x20020000 + 100*320 + 64);
	for (int i = 0; i < 16; ++i) {
		for (int j = 0; j < 191; ++j) {
			*screenptr++ = *title_instuction++;
		}
		screenptr += 129;
	}

	while (continue_input != 1);
	continue_input = 0;

	gameStatus = RESET_LEVEL1;
	clearscreen();

	return;
}

void displayGameOver()
{
	clearscreen();

	uint8_t* screenptr = (uint8_t*) (0x20020000 + 40*320 + 38);
	uint8_t* game_over = (uint8_t*) Game_Over;


	for (int i = 0; i < 46; ++i) {
		for (int j = 0; j < 244; ++j) {
			*screenptr++ = *game_over++;
		}
		screenptr += 76;
	}

	uint8_t* title_instuction = (uint8_t*) Title_Instruction;
	screenptr = (uint8_t*) (0x20020000 + 150*320 + 64);
	for (int i = 0; i < 16; ++i) {
		for (int j = 0; j < 191; ++j) {
			*screenptr++ = *title_instuction++;
		}
		screenptr += 129;
	}

	while (continue_input != 1);
	continue_input = 0;

	gameStatus = RESET_LEVEL1;
	clearscreen();

	return;
}

void clearscreen()
{
	uint32_t* ptrscreen = (uint32_t*)0x20020000;
	for (int i = 0; i < 16000; ++i) {
		*ptrscreen++ = 0;
	}


	// copy title sprite
	uint32_t* titleptr = (uint32_t*)title;
	ptrscreen = (uint32_t*)0x20020000;
	for (int i = 0; i < 1600; i++)
	{
		*ptrscreen++ = *titleptr++;
	}

	displayint(highScore, (uint32_t*)(0x200204E0));
	displayint(playerScore, (uint32_t*)(0x20020418));

	return;
}

void displayint(uint16_t val, uint32_t* screenptr)
{
	uint8_t digit = 0;
	uint32_t* digitptr;
	uint32_t* scrcopyptr;
	for (int i = 0; i < 5; i++)
	{
		digit = val % 10;
		val /= 10;

		scrcopyptr = screenptr;
		digitptr = (uint32_t*)(digits + (digit << 3));
		for (int i = 0; i < 9; i++)
		{
			for (int j = 0; j < 2; j++)
			{
				*scrcopyptr++ = *digitptr++;
			}
			digitptr += 18;
			scrcopyptr += 78;

		}
		screenptr -= 2;
	}
}

void updatescreen()
{
	uint8_t* ptrscreen;

	// Erase Previous Ship
	ptrscreen = (uint8_t*)(0x20020000 + ship_py*320 + ship_px);
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 12; j++) {
			*ptrscreen++ = 0;
		}
		ptrscreen += 308;
	}

	// Draw New Ship
	ptrscreen = (uint8_t*)(0x20020000 + ship_y*320 + ship_x);
	uint8_t* ptrsrc = Ship;
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 12; j++) {
			*ptrscreen++ = *ptrsrc++;
		}
		ptrscreen += 308;
	}

	// Erase broken barriers
	for (int barrier_index = 0; barrier_index < 3; ++barrier_index) {
		if (barrier_health[barrier_index] == 0) {
			ptrscreen = (uint8_t*) (0x20020000 + barrier_y_pos[barrier_index]*320 + barrier_x_pos[barrier_index]);
			for (int i = 0; i < 5; ++i) {
				for (int j = 0; j < 12; ++j) {
					*ptrscreen++ = 0;
				}
				ptrscreen += 308;
			}
		}

	}

	// Draw Barriers
	for (int barrier_index = 0; barrier_index < 3; ++barrier_index) {
		if (barrier_health[barrier_index] > 0) {
			ptrscreen = (uint8_t*) (0x20020000 + barrier_y_pos[barrier_index]*320 + barrier_x_pos[barrier_index]);
			ptrsrc = (uint8_t*) Barrier;
			for (int i = 0; i < 5; ++i) {
				for (int j = 0; j < 22; ++j) {
					*ptrscreen++ = *ptrsrc++;
				}
				ptrscreen += 298;
			}
		}

	}


	// Erase Previous Invader 1 Positions
	for (int row = 0; row < 4; row++) {
		for (int col = 0; col < 6; col++) {
				ptrscreen = (uint8_t*)(0x20020000 +invader1_prev_ypos[row][col]*320 + invader1_prev_xpos[row][col]);
				for (int i = 0; i < 8; i++) {
					for (int j = 0; j < 22; j++) {
						*ptrscreen++ = 0;
					}
					ptrscreen += 298;
				}

		}
	}


	// Draw New Invader 1 Positions
	for (int row = 0; row < 4; row++) {
		for (int col = 0; col < 6; col++) {
			if (invader1_status[row][col] == 1) {
				ptrscreen = (uint8_t*)(0x20020000 +invader1_ypos[row][col]*320 + invader1_xpos[row][col]);
				ptrsrc = Invader1;
				for (int i = 0; i < 8; i++) {
					for (int j = 0; j < 12; j++) {
						*ptrscreen++ = *ptrsrc++;
					}
					ptrscreen += 308;
				}
			}
		}
	}

	// Erase Previous Player Missile Positions
	for (int missile_index = 0; missile_index < 3; ++missile_index) {
		ptrscreen = (uint8_t*)(0x20020000 + player_missile_prev_ypos[missile_index]*320 + player_missile_prev_xpos[missile_index]);
		for (int i = 0; i < 4; i++) {
			for (int j = 0; j < 1; j++) {
				*ptrscreen++ = 0;
			}
			ptrscreen += 319;
		}
	}

	// Display Player Missile
	for (int m = 0; m < 3; ++m) {
		if (player_missile_status[m] == 1) {
			ptrscreen = (uint8_t*)(0x20020000 + player_missile_ypos[m]*320 + player_missile_xpos[m]);
			ptrsrc = Missile;
			for (int i = 0; i < 4; ++i) {
				for (int j = 0; j < 1; ++j) {
					*ptrscreen++ = *ptrsrc++;
				}
				ptrscreen += 319;
			}
		}
	}

	// Erase Previous Invader 1 Missile Positions
	for (int missile_index = 0; missile_index < 6; ++missile_index) {
		if (invader1_missile_status[missile_index] == 1) {
			ptrscreen = (uint8_t*)(0x20020000 + invader1_missile_prev_ypos[missile_index]*320 + invader1_missile_prev_xpos[missile_index]);
			for (int i = 0; i < 4; ++i) {
				for (int j = 0; j < 1; ++j) {
					*ptrscreen++ = 0;
				}
				ptrscreen += 319;
			}
		}
	}

	// Display Invader 1 Missile
	for (int missile_index = 0; missile_index < 6; ++missile_index) {
		if (invader1_missile_status[missile_index] == 1) {
			ptrscreen = (uint8_t*)(0x20020000 + invader1_missile_ypos[missile_index]*320 + invader1_missile_xpos[missile_index]);
			ptrsrc = Missile;
			for (int i = 0; i < 4; ++i) {
				for (int j = 0; j < 1; ++j) {
					*ptrscreen++ = *ptrsrc++;
				}
				ptrscreen += 319;
			}
		}
	}

	// Display explosions
	explodeInvader1();


	displayint(playerScore, (uint32_t*)(0x20020418));
}

void updatePlayerMissileStatus(int missile_index)
{
	int pos_x = player_missile_prev_xpos[missile_index];
	int pos_y = player_missile_prev_ypos[missile_index];

	// Check if missile is out of bounds
	if (player_missile_ypos[missile_index] <= 15) {
		player_missile_status[missile_index] = 0;
		uint8_t* ptrscreen = (uint8_t*)(0x20020000 + pos_y*320 + pos_x);
		for (int i = 0; i < 4; i++) {
			for (int j = 0; j < 1; j++) {
				*ptrscreen++ = 0;
			}
			ptrscreen += 319;
		}
		return;
	}


	/// Check for player missile and enemy collision
	// Loop through enemy positions to check if one is hit
	int inv_pos_x;
	int inv_pos_y;
	int inv_w = 12;
	int inv_h = 8;
	int inv_r, inv_c, inv_hit = 0;
	for (int row = 0; row < 4; ++row) {
		for (int col = 0; col < 6; ++col) {
			if (invader1_status[row][col] == 0) {
				continue;
			}
			inv_pos_x = invader1_prev_xpos[row][col];
			inv_pos_y = invader1_prev_ypos[row][col];

			if ( ((inv_pos_x + inv_w) >= pos_x) && (inv_pos_x <= pos_x + 2) && ((inv_pos_y + inv_h) >= pos_y) && (inv_pos_y <= pos_y) ) {
				inv_hit = 1;
				inv_r = row;
				inv_c = col;
				break;
			}


		}
	}

	if (inv_hit == 1) {
		playerScore += 10;
		player_missile_status[missile_index] = 0;
		invader1_status[inv_r][inv_c] = 0;

		inv_pos_x = invader1_prev_xpos[inv_r][inv_c];
		inv_pos_y = invader1_prev_ypos[inv_r][inv_c];

		// Erase missile and enemy
		uint8_t* ptrscreen = (uint8_t*)(0x20020000 + pos_y*320 + pos_x);
		for (int i = 0; i < 4; i++) {
			for (int j = 0; j < 1; j++) {
				*ptrscreen++ = 0;
			}
			ptrscreen += 319;
		}

		ptrscreen = (uint8_t*)(0x20020000 + inv_pos_y*320 + inv_pos_x);
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 12; j++) {
				*ptrscreen++ = 0;
			}
			ptrscreen += 308;
		}

		// Find an open explosion index and assign explode coordinates
		for (int explode_index = 0; explode_index < 3; ++explode_index) {
			if (inv1_explode_phase[explode_index] == 0){
				inv1_explode_phase[explode_index] = 1;

				int explode_x_pos = inv_pos_x - 10;
				int explode_y_pos = inv_pos_y - 12;

				// Cap explosion coordinates to the screen
				if (explode_x_pos <= 0) explode_x_pos = 0;
				if (explode_x_pos >= 288) explode_x_pos = 288;
				if (explode_y_pos >= 167) explode_y_pos = 167;
				if (explode_y_pos <= 0) explode_y_pos = 0;

				inv1_x_pos_to_explode[explode_index] = explode_x_pos;
				inv1_y_pos_to_explode[explode_index] = explode_y_pos;
				break;
			}
		}

	}


	return;
}


void updateEnemyMissileStatus(int missile_index)
{

	int pos_x = invader1_missile_xpos[missile_index];
	int pos_y = invader1_missile_ypos[missile_index];

	if (pos_y >= 200) { // out of bounds and erase
		invader1_missile_status[missile_index] = 0;
		uint8_t* ptrscreen = (uint8_t*)(0x20020000 + invader1_missile_prev_ypos[missile_index]*320 + invader1_missile_prev_xpos[missile_index]);
		for (int i = 0; i < 4; ++i) {
			for (int j = 0; j < 1; ++j) {
				*ptrscreen++ = 0;
			}
			ptrscreen += 319;
		}
		return;
	}

	// Check if missile hit player ship
	if ((ship_x + 12 >= pos_x) && (ship_x <= pos_x + 1) && (ship_y + 8 >= pos_y) && (ship_y <= pos_y + 1)) { // Player Ship Hit
		--ship_health;
		if (ship_health <= 0) {
			gameStatus = LOSE;
		}
		return;
	}


	return;
}

void explodeInvader1()
{
	for (int explode_index = 0; explode_index < 3; ++explode_index) {

		//if (inv1_explode_phase[explode_index] != 0) {

			uint8_t* screenptr = (uint8_t*) (0x20020000 + inv1_y_pos_to_explode[explode_index]*320 + inv1_x_pos_to_explode[explode_index]);
			uint8_t* explode_sprite = 0;

			// Erase explosion if sequence was complete and set explode_phase to 0
			if (inv1_explode_phase[explode_index] == 8) {

				for (int i = 0; i < 32; ++i) {
					for (int j = 0; j < 32; ++j) {
						*screenptr++ = 0;
					}
					screenptr += 288;
				}
				inv1_explode_phase[explode_index] = 0;
				inv1_x_pos_to_explode[explode_index] = 0;
				inv1_y_pos_to_explode[explode_index] = 0;
			}

			// Find the right explode sprite
			switch (inv1_explode_phase[explode_index]) {
				case 1:
					explode_sprite = (uint8_t*) explode1;
					break;
				case 2:
					explode_sprite = (uint8_t*) explode2;
					break;
				case 3:
					explode_sprite = (uint8_t*) explode3;
					break;
				case 4:
					explode_sprite = (uint8_t*) explode4;
					break;
				case 5:
					explode_sprite = (uint8_t*) explode5;
					break;
				case 6:
					explode_sprite = (uint8_t*) explode6;
					break;
				case 7:
					explode_sprite = (uint8_t*) explode7;
					break;
			}
			if (inv1_explode_phase[explode_index] != 0) {
				for (int i = 0; i < 32; ++i) {
					for (int j = 0; j < 32; ++j) {
						*screenptr++ = *explode_sprite++;
					}
					screenptr += 288;
				}
				inv1_explode_phase[explode_index]++;
			}


		//}

	}
	return;
}

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  /* USER CODE BEGIN 2 */

  ship_x = 154;
  ship_y = 192;
  ship_px = ship_x;
  ship_py = ship_y;

  // Initialize Invader 1 position and status
  for (int r = 0; r < 4; r++) {
	  for (int c = 0; c < 6; c++) {
		  invader1_status[r][c] = 1;
		  invader1_xpos[r][c] = 80 + c*30;
		  invader1_ypos[r][c] = 50 + r*20;
		  invader1_prev_xpos[r][c] = invader1_xpos[r][c];
		  invader1_prev_ypos[r][c] = invader1_ypos[r][c];
	  }
  }

  gameStatus = INTRO_SCREEN;

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  /// Display Intro Screen
	  if (gameStatus == INTRO_SCREEN) {
		  displayIntroScreen();
	  }

	  /// Lost Game
	  if (gameStatus == LOSE) {
		  if (playerScore >= highScore) {
			  highScore = playerScore;
		  }
		  playerScore = 0;

		  displayGameOver();
		  gameStatus = RESET_LEVEL1;
	  }

	  /// Reset Game
	  if (gameStatus == RESET_LEVEL1) {

		  // Initialize Invader 1 position and status
		  all_invader1_alive = 1;
		  for (int r = 0; r < 4; r++) {
			  for (int c = 0; c < 6; c++) {
				  invader1_status[r][c] = 1;
				  invader1_xpos[r][c] = 80 + c*30;
				  invader1_ypos[r][c] = 50 + r*20;
				  invader1_prev_xpos[r][c] = invader1_xpos[r][c];
				  invader1_prev_ypos[r][c] = invader1_ypos[r][c];
			  }
		  }

		  // Reset Player Missiles
		  for (int missile_index = 0; missile_index < 3; ++missile_index) {
			player_missile_status[missile_index] = 0;
		  }
		  // Reset Invader 1 Missiles
		  for (int missile_index = 0; missile_index < 6; ++missile_index) {
			invader1_missile_status[missile_index] = 0;
		  }

		  // Reset and initialize barriers
		  for (int barrier_index = 0; barrier_index < 3; ++barrier_index) {
			barrier_health[barrier_index] = 4;
			barrier_x_pos[barrier_index] = 60 + barrier_index*80;
			barrier_y_pos[barrier_index] = 160;
		  }

		  gameStatus = LEVEL_1;
		  clearscreen();
	  }

	  /// Level 1
	  if (gameStatus == LEVEL_1) {
		if (continue_input != 0) continue_input = 0; // In case continue input was accidentally set.

		if (refresh==1) { // refresh interrupt was triggered
		  updatescreen();

		  // Save player previous position
		  ship_px = ship_x;
		  ship_py = ship_y;

		  // Save enemy invader 1 previous position
		  for (int r = 0; r < 4; r++) {
			  for (int c = 0; c < 6; c++) {
				  invader1_prev_xpos[r][c] = invader1_xpos[r][c];
				  invader1_prev_ypos[r][c] = invader1_ypos[r][c];
			  }
		  }

		  // Save player missiles previous position
		  for (int missile_index = 0; missile_index < 3; ++missile_index) {
			if (player_missile_status[missile_index] == 1) {
				player_missile_prev_xpos[missile_index] = player_missile_xpos[missile_index];
				player_missile_prev_ypos[missile_index] = player_missile_ypos[missile_index];
			}
		  }

		  // Save enemy missiles previous position
		  for (int missile_index = 0; missile_index < 6; ++missile_index) {
			if (invader1_missile_status[missile_index] == 1) {
				invader1_missile_prev_xpos[missile_index] = invader1_missile_xpos[missile_index];
				invader1_missile_prev_ypos[missile_index] = invader1_missile_ypos[missile_index];
			}
		  }

		  refresh = 0;
		} // Refresh triggered


		// Move player ship, player missiles and enemy missiles
		if (HAL_GetTick() - ctr_lastcheck >= 1) {
			if ((ship_x < 308) && HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_9)) { // Right
				ship_x++;
			}
			else if ((ship_x > 0) && HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_10)) { // Left
				ship_x--;
			}

			// Move the fired player missiles
			for (int missile_index = 0; missile_index < 3; ++missile_index) {
				if (player_missile_status[missile_index] == 1) {
					player_missile_ypos[missile_index]--;
					updatePlayerMissileStatus(missile_index);
				}
			}

			// Move fired enemy missiles
			for (int missile_index = 0; missile_index < 6; ++missile_index) {
				if (invader1_missile_status[missile_index] == 1) {
					invader1_missile_ypos[missile_index]++;
					updateEnemyMissileStatus(missile_index);
				}
			}

			ctr_lastcheck = HAL_GetTick();
		}

		// Move Invader 1
		if (HAL_GetTick() - ctr_invader1_lastcheck >= 16) {

			if (row_to_move < 0) {
				row_to_move = 3;
			}
			for (int col = 0; col < 6; col++) {
				if (inv1_direction == 1) {
					invader1_xpos[row_to_move][col] += 4;
				}
				else if (inv1_direction == 0) {
					invader1_xpos[row_to_move][col] -= 4;
				}
			}
			row_to_move--;

			if (invader1_xpos[0][5] > 304) { // move down at right side
				for (int row = 0; row < 4; row++) {
					for (int col = 0; col < 6; col++) {
						invader1_ypos[row][col] += 2;
					}
				}
				inv1_direction = 0;
			}
			else if (invader1_xpos[0][0] < 4) { // down at left side
				for (int row = 0; row < 4; ++row) {
					for (int col = 0; col < 6; ++col) {
						invader1_ypos[row][col] += 2;
					}
				}
				inv1_direction = 1;
			}

			ctr_invader1_lastcheck = HAL_GetTick();
		}


		// Player ship fired missile
		if (player_fire == 1) {
			// loop to find available missile
			for (int missile_index = 0; missile_index < 3; ++missile_index) {
				if (player_missile_status[missile_index] == 0) {

					player_missile_status[missile_index] = 1;
					player_missile_xpos[missile_index] = ship_x + 5;
					player_missile_ypos[missile_index] = ship_y - 4;
					break;
				}
			}
			player_fire = 0;
		}

		// Fire invader 1 missile
		if (HAL_GetTick() - ctr_invader1_fire >= 2) {
			for (int missile_index = 0; missile_index < 6; ++missile_index) {

				if (invader1_missile_status[missile_index] == 0) {
					if (invader1_fire_index > 95) {
						invader1_fire_index = 0;
					}
					int row = invader1_fire_sequence[invader1_fire_index] / 6;
					int col = invader1_fire_sequence[invader1_fire_index] % 6;
					invader1_fire_index++;
					if (invader1_status[row][col] == 1) {
						invader1_missile_status[missile_index] = 1;
						invader1_missile_xpos[missile_index] = invader1_xpos[row][col];
						invader1_missile_ypos[missile_index] = invader1_ypos[row][col];
					}
				}
				break;
			}

			ctr_invader1_fire = HAL_GetTick();
		}

		// Check if all Invader1 are dead
		all_invader1_alive = 0;
		for (int row = 0; row < 4; ++row) {
			for (int col = 0; col < 6; ++col) {
				if (invader1_status[row][col] == 1) {
					all_invader1_alive = 1;
				}
			}
			if (all_invader1_alive) {
				break;
			}
		}
		if (all_invader1_alive == 0) {
			gameStatus = RESET_LEVEL1;
		}

	  } // end Level_1




    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

  /*Configure GPIO pin : PD8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

  /*Configure GPIO pins : PD9 PD10 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);

  /*Configure GPIO pin : PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_4;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);

  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);

}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{ 
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
